{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 import simplegui\
\
# define global variables\
interval = 100\
integer = 0\
position_stopwatch = [60, 100]\
position_score = [160, 30]\
width = 200\
height = 200\
attempts = 0\
successes = 0\
\
# define helper function format that converts time\
# in tenths of seconds into formatted string A:BC.D\
def format():\
    global integer\
    A = integer // 600\
    B = integer // 10 % 60 // 10\
    C = integer // 10 % 10\
    D = integer % 10\
    return str(A) + ":" + str(B) + str(C) + '.' + str(D)\
    pass\
    \
# define event handlers for buttons; "Start", "Stop", "Reset"\
def start():\
    timer.start()\
    \
def stop():\
    global integer, attempts, successes\
    if timer.is_running() and integer % 10 == 0:\
        attempts += 1\
        successes += 1\
    elif timer.is_running() and integer % 10 <> 0:\
        attempts += 1\
    timer.stop()\
    \
def reset():\
    timer.stop()\
    global integer, attempts, successes\
    integer = 0\
    attempts = 0\
    successes = 0\
    \
# define event handler for timer with 0.1 sec interval\
def counter():\
    global integer\
    integer += 1\
    return integer\
\
# define draw handler\
def stopwatch(canvas):\
    canvas.draw_text(format(), position_stopwatch, 42, "Pink")\
    canvas.draw_text(str(successes) + "/" + str(attempts), position_score, 24, "Yellow") \
                             \
# create frame\
frame = simplegui.create_frame("Stopwatch: The Game!", width, height)\
\
# register event handlers\
timer = simplegui.create_timer(interval, counter)\
frame.set_draw_handler(stopwatch)\
startbutton = frame.add_button("Start", start, 100)\
stopbutton = frame.add_button("Stop", stop, 100)\
resetbutton = frame.add_button("Reset", reset, 100)\
\
# start frame\
frame.start()\
\
}