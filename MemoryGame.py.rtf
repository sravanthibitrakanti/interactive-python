{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 # implementation of card game - Memory\
\
import simplegui\
import random\
\
NUMBER_OF_CARDS = 16\
FONT_FACE = "serif"\
FONT_COLOR = "Red"\
FONT_SIZE = 70\
\
# helper function to initialize globals\
def init():\
    global cards, exposed, state, attempts\
    cards = list(range(0,NUMBER_OF_CARDS/2)) * 2\
    random.shuffle(cards)\
    exposed = [False] * NUMBER_OF_CARDS\
    state = []\
    attempts = 0; label.set_text("Moves = " + str(attempts))\
\
def update_state(selected):\
    global state \
    global exposed, cards, attempts\
\
    exposed[selected] = True\
    if len(state) == 0:\
        attempts += 1\
    elif len(state) == 1:\
        if cards[state[0]] == cards[selected]: \
            exposed[state.pop()] = True\
            return\
    elif len(state) == 2:\
        exposed[state.pop()] = False\
        exposed[state.pop()] = False  \
        attempts += 1\
    state.append(selected)\
    label.set_text("Moves = " + str(attempts))\
    \
# define event handlers\
def mouseclick(pos):\
    # add game state logic here\
    global state\
    selected = int(pos[0]/50);\
    if exposed[selected] == False:\
        update_state(selected)\
    else:\
        print 'Invalid Click'\
                                \
# cards are logically 50x100 pixels in size    \
def draw(canvas):\
    global cards\
    for index in range(NUMBER_OF_CARDS):\
        if exposed[index]:\
            text_width = frame.get_canvas_textwidth(str(cards[index]),FONT_SIZE,FONT_FACE)\
            canvas.draw_text(str(cards[index]),(index*50+(50-text_width)/2,FONT_SIZE),FONT_SIZE,FONT_COLOR,FONT_FACE)  \
        else: \
            canvas.draw_polygon([(index*50,0),((index+1)*50,0),((index+1)*50,100),(index*50,100),(index*50,0)],1,"Yellow","Purple")\
    \
# create frame and add a button and labels\
frame = simplegui.create_frame("Memory", 800, 100)\
frame.add_button("Restart", init)\
label = frame.add_label("Moves = 0")\
\
# initialize global variables\
init()\
\
# register event handlers\
frame.set_mouseclick_handler(mouseclick)\
frame.set_draw_handler(draw)\
\
# get things rolling\
frame.start()\
\
# Always remember to review the grading rubric\
def test():\
    init(); print cards; print exposed\
}